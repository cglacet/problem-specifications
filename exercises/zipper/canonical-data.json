{
   "exercise":"zipper",
   "version":"2.0.0",
   "comments":[
      " The test cases for this exercise verifies that a tree can be build ",
      " from recursive applications of one of the following atomic         ",
      " operations:                                                        ",
      "    - cursor moving: left, right, up                                ",
      "    - node insertion/modification and reading                       ",
      "                                                                    ",
      " A zipper binary tree, is a binary tree with a cursor placed on any ",
      " of its nodes.                                                      ",
      "                                                                    ",
      " Any zipper tree construction always start from an empty zipper:    ",
      "     - an empty tree (not even a root node).                        ",
      "     - a cursor on the place where a root node coulb be inserted.   ",
      "                                                                    ",
      " The first part of the test consists in building a unique tree,     ",
      " checking at each steps that:                                       ",
      "     - values inside the tree are correct,                          ",
      "     - and all operation are non mutating                           ",
      "     (reading is by definition non mutating, therefore we wont      ",
      "      test this operation)                                          ",
      "                                                                    ",
      " The second part of the test for un-authorized moves operations,    ",
      " like inserting on non-empty spots, or going in a direction where   ",
      " cursor is not allowed to go (eg., up from the root)                "
   ],
   "cases":[
      {
         "description":"Zipper is empty.",
         "property":"testEmpty",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[

            ]
         },
         "expected":{
            "error":"There is no value here, but you can insert a node here."
         }
      },
      {
         "description":"Insert method shouldn't mutate the object.",
         "property":"testInsertNonMutating",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":null,
                  "applyOn":"zipper",
                  "item":1
               }
            ]
         },
         "expected":{
            "error":"There is no value here, but you can insert a node here."
         }
      },
      {
         "description":"Insert method actually set the right value at the right place.",
         "property":"testInsertAndGetValue",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"value",
                  "affectTo":"actual"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":1
         }
      },
      {
         "description":"Tests that left move arrives to a zipper that is empty support insertion.",
         "property":"testLeft",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"left",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":2
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"zipper"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":2
         }
      },
      {
         "description":"Tests that right move arrives to a zipper that is empty support insertion.",
         "property":"testLeft",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"right",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":3
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"zipper"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":3
         }
      },
      {
         "description":"Tests that both left and right moves do not mutate the initialZipper.",
         "property":"testLeftAndRightInsertNonMutating",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"left",
                  "affectTo":"tmp",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":null,
                  "applyOn":"tmp",
                  "item":2
               },
               {
                  "operation":"right",
                  "affectTo":"tmp",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":null,
                  "applyOn":"tmp",
                  "item":3
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"zipper"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":1
         }
      },
      {
         "description":"Tests that going left then up is equivalent to staying put.",
         "property":"testLeftUpCancels",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"left",
                  "affectTo":"tmp",
                  "applyOn":"zipper"
               },
               {
                  "operation":"up",
                  "affectTo":"tmp",
                  "applyOn":"tmp"
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"tmp"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":1
         }
      },
      {
         "description":"Tests that going left then up is equivalent to staying put.",
         "property":"testLeftUpCancels",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":2
               },
               {
                  "operation":"left",
                  "affectTo":"tmp",
                  "applyOn":"zipper"
               },
               {
                  "operation":"up",
                  "affectTo":"tmp",
                  "applyOn":"tmp"
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"tmp"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":2
         }
      },
      {
         "description":"Tests that up moves do not mutate the initialZipper",
         "property":"testUpNonMutating",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"left",
                  "affectTo":"tmp",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":2
               },
               {
                  "operation":"up",
                  "affectTo":null,
                  "applyOn":"zipper"
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"zipper"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":2
         }
      },
      {
         "description":"Test seting value (modifying an existing node)",
         "property":"testSetValue",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"right",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":3
               },
               {
                  "operation":"up",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"left",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":2
               },
               {
                  "operation":"value",
                  "affectTo":"z_value",
                  "applyOn":"zipper"
               },
               {
                  "operation":"multiply",
                  "affectTo":"tmp",
                  "applyOn":[
                     "z_value",
                     2
                  ]
               },
               {
                  "operation":"setValue",
                  "affectTo":"tmp",
                  "applyOn":"zipper",
                  "item":"tmp"
               },
               {
                  "operation":"floorDivide",
                  "affectTo":"actual",
                  "applyOn":[
                     "tmp",
                     "z_value"
                  ]
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":2
         }
      },
      {
         "description":"Test that setValue do not mutate the initialZipper.",
         "property":"testSetValueNonMutating",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":4
               },
               {
                  "operation":"setValue",
                  "affectTo":null,
                  "applyOn":"zipper",
                  "item":8
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"zipper"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":4
         }
      },
      {
         "description":"Tests the root shortcut.",
         "property":"testRoot",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"right",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":3
               },
               {
                  "operation":"left",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":5
               },
               {
                  "operation":"root",
                  "affectTo":"tmp",
                  "applyOn":"zipper"
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"tmp"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":1
         }
      },
      {
         "description":"Tests the root shortcut.",
         "property":"testRoot",
         "input":{
            "initialZipper":{
               "name":"zipper"
            },
            "operations":[
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":1
               },
               {
                  "operation":"right",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":3
               },
               {
                  "operation":"left",
                  "affectTo":"zipper",
                  "applyOn":"zipper"
               },
               {
                  "operation":"insert",
                  "affectTo":"zipper",
                  "applyOn":"zipper",
                  "item":5
               },
               {
                  "operation":"root",
                  "affectTo":null,
                  "applyOn":"zipper"
               },
               {
                  "operation":"value",
                  "affectTo":"actual",
                  "applyOn":"zipper"
               }
            ]
         },
         "expected":{
            "type":"int",
            "value":5
         }
      }
   ]
}
